{"version":3,"sources":["../../app-es6/services/NegociacaoService.js"],"names":["NegociacaoService","_http","HttpService","Promise","resolve","reject","get","then","negociacoes","map","Negociacao","Date","objeto","data","quantidade","valor","catch","console","log","erro","all","obterNegociacoesDaSemana","obterNegociacoesDaSemanaAnterior","obterNegociacoesDaSemanaRetrasada","periodos","reduce","dados","periodo","concat","dado","Error","negociacao","ConnectionFactory","getConnection","NegociacaoDao","connection","dao","adiciona","listaTodos","apagaTodos","listaAtual","obterNegociacoes","filter","some","JSON","stringify","negociacaoExistente"],"mappings":"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","file":"NegociacaoService.js","sourcesContent":["class NegociacaoService {\n\n\tconstructor () {\n\n\t\tthis._http = new HttpService();\n\t}\n\n\tobterNegociacoesDaSemana() {\n\n\t\treturn new Promise((resolve, reject) => {\n\n\t\t\tthis._http\n\t\t\t\t.get('negociacoes/semana')\n\t\t\t\t.then(negociacoes => {\n\t\t\t\t\tresolve(negociacoes.map(objeto => new Negociacao(new Date(objeto.data), objeto.quantidade, objeto.valor)));\n\t\t\t\t})\n\t\t\t\t.catch(erro => {\n\t\t\t\t\tconsole.log(erro);\n\t\t\t\t\treject('Semana Atual - Não foi possível obter as negociações da semana')\n\t\t\t\t});\n\t\t});\n\t}\n\n\tobterNegociacoesDaSemanaAnterior() {\n\n\t\treturn new Promise((resolve, reject) => {\n\n\t\t\tthis._http\n\t\t\t\t.get('negociacoes/anterior')\n\t\t\t\t.then(negociacoes => {\n\t\t\t\t\tresolve(negociacoes.map(objeto => new Negociacao(new Date(objeto.data), objeto.quantidade, objeto.valor)));\n\t\t\t\t})\n\t\t\t\t.catch(erro => {\n\t\t\t\t\tconsole.log(erro);\n\t\t\t\t\treject('Semana Anterior - Não foi possível obter as negociações da semana')\n\t\t\t\t});\n\t\t});\n\t}\n\n\tobterNegociacoesDaSemanaRetrasada() {\n\n\t\treturn new Promise((resolve, reject) => {\n\n\t\t\tthis._http\n\t\t\t\t.get('negociacoes/retrasada')\n\t\t\t\t.then(negociacoes => {\n\t\t\t\t\tresolve(negociacoes.map(objeto => new Negociacao(new Date(objeto.data), objeto.quantidade, objeto.valor)));\n\t\t\t\t})\n\t\t\t\t.catch(erro => {\n\t\t\t\t\tconsole.log(erro);\n\t\t\t\t\treject('Semana Retrasada - Não foi possível obter as negociações da semana')\n\t\t\t\t});\n\t\t});\n\t}\n\n\tobterNegociacoes() {\n        \n        return Promise.all([\n            this.obterNegociacoesDaSemana(),\n            this.obterNegociacoesDaSemanaAnterior(),\n            this.obterNegociacoesDaSemanaRetrasada()\n        ]).then(periodos => {\n\n            let negociacoes = periodos\n                .reduce((dados, periodo) => dados.concat(periodo), [])\n                .map(dado => new Negociacao(new Date(dado.data), dado.quantidade, dado.valor ));\n\n            return negociacoes;\n        }).catch(erro => {\n            throw new Error(erro);\n        });\n\t}\n\n\tcadastra(negociacao) {\n\n\t\treturn ConnectionFactory\n\t\t\t.getConnection()\n\t\t\t.then(connection => new NegociacaoDao(connection))\n\t\t\t\t.then(dao => dao.adiciona(negociacao))\n\t\t\t\t.then(() => 'Negociação adicionada com sucesso!')\n\t\t\t\t.catch(erro => {\n\t\t\t\t\tconsole.log(erro);\n\t\t\t\t\tthrow new Error('Não foi possível adicionar a negociação')\n\t\t\t});\n\t}\n\n\tlista() {\n\n\t\treturn ConnectionFactory\n\t\t\t.getConnection()\n\t\t\t.then(connection => new NegociacaoDao(connection))\n\t\t\t\t.then(dao => dao.listaTodos())\n\t\t\t\t.catch(erro => {\n\t\t\t\t\tconsole.log(erro);\n\t\t\t\t\tthrow new Error('Não foi possível obter as negociações');\n\t\t\t\t});\n\t}\n\n\tapaga() {\n\n\t\treturn ConnectionFactory\n\t\t\t.getConnection()\n\t\t\t.then(connection => new NegociacaoDao(connection))\n\t\t\t.then(dao => dao.apagaTodos())\n\t\t\t.then(() => 'Negociações apagadas com sucesso')\n\t\t\t.catch(erro => {\n\t\t\t\tconsole.log(erro);\n\t\t\t\tthrow new Error('Não foi possível obter as negociações')\n\t\t\t})\n\t}\n\n\timporta(listaAtual) {\n\n\t\treturn this.obterNegociacoes()\n\t\t\t.then(negociacoes =>\n\t\t\t\tnegociacoes.filter(negociacao =>\n\t\t\t\t\t!listaAtual.some(negociacaoExistente =>\n\t\t\t\t\t\tJSON.stringify(negociacao) == JSON.stringify(negociacaoExistente)))\n\t\t\t)\n\t\t\t.catch(erro => {\n\t\t\t\tconsole.log(erro);\n\t\t\t\tthrow new Error('Não foi possível biscar negociações para importar');\n\t\t\t})\n\t}\n}"]}